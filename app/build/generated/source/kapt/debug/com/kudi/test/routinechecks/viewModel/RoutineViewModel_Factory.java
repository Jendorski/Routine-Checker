// Generated by Dagger (https://dagger.dev).
package com.kudi.test.routinechecks.viewModel;

import com.kudi.test.routinechecks.data.repository.RoutineRepository;
import dagger.internal.Factory;
import javax.inject.Provider;
import kotlinx.coroutines.CoroutineScope;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoutineViewModel_Factory implements Factory<RoutineViewModel> {
  private final Provider<RoutineRepository> repositoryProvider;

  private final Provider<CoroutineScope> ioCoroutineScropeIOProvider;

  public RoutineViewModel_Factory(Provider<RoutineRepository> repositoryProvider,
      Provider<CoroutineScope> ioCoroutineScropeIOProvider) {
    this.repositoryProvider = repositoryProvider;
    this.ioCoroutineScropeIOProvider = ioCoroutineScropeIOProvider;
  }

  @Override
  public RoutineViewModel get() {
    return new RoutineViewModel(repositoryProvider.get(), ioCoroutineScropeIOProvider.get());
  }

  public static RoutineViewModel_Factory create(Provider<RoutineRepository> repositoryProvider,
      Provider<CoroutineScope> ioCoroutineScropeIOProvider) {
    return new RoutineViewModel_Factory(repositoryProvider, ioCoroutineScropeIOProvider);
  }

  public static RoutineViewModel newInstance(RoutineRepository repository,
      CoroutineScope ioCoroutineScropeIO) {
    return new RoutineViewModel(repository, ioCoroutineScropeIO);
  }
}
