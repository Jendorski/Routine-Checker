// Generated by Dagger (https://dagger.dev).
package com.elifox.legocatalog.di;

import android.app.Application;
import com.kudi.test.routinechecks.data.database.RoutineCheckDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideDbFactory implements Factory<RoutineCheckDatabase> {
  private final AppModule module;

  private final Provider<Application> appProvider;

  public AppModule_ProvideDbFactory(AppModule module, Provider<Application> appProvider) {
    this.module = module;
    this.appProvider = appProvider;
  }

  @Override
  public RoutineCheckDatabase get() {
    return provideDb(module, appProvider.get());
  }

  public static AppModule_ProvideDbFactory create(AppModule module,
      Provider<Application> appProvider) {
    return new AppModule_ProvideDbFactory(module, appProvider);
  }

  public static RoutineCheckDatabase provideDb(AppModule instance, Application app) {
    return Preconditions.checkNotNull(instance.provideDb(app), "Cannot return null from a non-@Nullable @Provides method");
  }
}
